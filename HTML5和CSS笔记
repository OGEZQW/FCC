HTML:Hyper Text Markup Language(超文本标记语言)

一级标题：<h1>Hello</h1>

二级标题：<h2>CatPhotoApp</h2>

段落：<p>Hello Paragtaph</p>

注释：<！--  -->

改变文本颜色：
  内联样式（最简单有效）
    <h2 style="coor:blue">CatPhotoApp</h2>
  
  层叠样式表（更易于维护）
    <style> 
      元素选择器 {属性名称：属性值；} 
      h2{color:red;}
    </style>   
    
    <style>
       类选择器 {属性名称：属性值；} 
      .blue-text{color:blue;}
    </style>
    <h2 class="blue-text">我家的猫咪</h2>
    在CSS中，类选择器应该添加.为前缀，
    而在HTML中，class属性不能添加.为前缀。
    这是因为在CSS中如果类选择器前不添加. 浏览器就会误认为类选择器是一个元素选择器。

字号：font-size
  <style>
    h1{font-size:30px;}
  </style>

字体：font-family
  <style>
    h2{font-family:Sans-serif;}
  </style>

导入谷歌字体
  <link href="https://fonts.gdgdocs.org/css?family=Lobster"
  rel="styleshet" type="text/css">置顶
  然后将Lobster作为font-family属性的值应用到元素上
  h2{font-family:lobster;}

字体自动降级
  有几种默认字体是所有浏览器可用（monospace,serif,sans-serif）
  当某种字体不可用可自动降级成另一种字体
  p{font-family:helvetica,sans-serif}
  
添 /style>
  <img class="smaller-image thin-red-border"
   src="/images/relaxing-cat.jpg">
 
边框变圆
   通过CSS的一个叫border-radius(边框半径)的属性来让它的边框变成圆的。
   .thick-green-border {
     border-color: green;
     border-width: 10px;
     border-style: solid;
     border-radius:10px;//或者border-radius:10%;
      //使整个框变圆的border-radius:50px或者50%;
   }

a元素
  anchor又叫锚点，用于链接外部地址实现页面跳转
  或者链接到当前页面某部分实现内部导航
  <p>Here's a
   <a href="http://freecodecamp.cn">
   link to FreeCodeCamp中文社区 </a> 
  for you to follow.</p>   //嵌套：将一个元素放入另一个元素
  
  固定链接
    还不知道链接到哪时可以将href属性的值替换为#（哈希符号）
    <a href="#">
      <img class="smaller-image thick-green-border" src="/images/relaxing-cat.jpg">
    </a>    //将图片嵌套进a元素
   
alt属性(alt text)
  当图片无法加载时显示的替代文本,搜索引擎也会搜索alt属性
  <img src="www.your-image-source.com/your-image.jpg" alt="your alt text">

带项目符号的列表（无序列表unordered lists）
  <ul>
    <li>milk</li>
    <li>cheese</li>
  </ul>
 
数字编号列表（有序列表ordered lists）
  <ol>
    <li>Garfield</li>
    <li>Sylvester</li>
  </ol>

表单

 文本输入框（Text input）
   <input type="text">
   
 占位符（placeholder text）:输入框在输入前置于框中的预定义文本
   <input type="text" placeholder="this is placeholder text">
  
 与互联网交互的web表单(form)
   action属性：指定了表单提交到服务器的地址
   <form action="/submit-cat-photo">
     <input type="text" placeholder="cat photo URL">
   </form> 
   
   提交按钮 
     点击这个按钮，表单中的数据将会被发送到你通过action属性指定的地址上。
     <button type="submit">按钮文本</button>
 
 必填项（required）
   不填写输入框就无法提交表单
   <input type="text" required>
 
 单选按钮（radio button）
   是input输入框的一种类型，适用于多选一
   每个单选按钮都要嵌套在它自己的label标签中
   所有关联的单选按钮应该使用相同的name属性
   <label><input type="radio"name="indoor-outdoor">Indoor</label>
   <label><input type="radio"name="indoor-outdoor">Outdoor</label>
 
 多选按钮（check boxes）
   复选按钮是input的输入框的另一种类型。
   每一个复选按钮都应该嵌套进label元素中。   
   所有关联的复选按钮应该具有相同的name属性。
   <label><input type="checkbox" name=personality>gaga </label>
   <label><input type="checkbox" name=personality>miao</label>
   <label><input type="checkbox" name=personality>giao</label>
 
 checked属性
   在input元素中设置默认选中
   <input type="radio" name="test-name" checked>
  
 div元素
   也被称作division(层)元素，是一个盛装其他元素的通用容器。
   src="/images/relaxing-cat.jpg"></a>
   <div>
   <p>Things cats love:</p>
   <ul>
     <li>cat nip</li>
     <li>laser pointers</li>
     <li>lasagna</li>
   </ul>
   <p>Top 3 things cats hate:</p>
   <ol>
     <li>flea treatment</li>
     <li>thunder</li>
     <li>other cats</li>
   </ol>
   </div>
   
 设置一个元素的背景色
   使用backgroud-color属性来设置元素的背景色
   .green-background{
   background-color:green;
   }
   <div class="gray-background">
    ...
   </div>
     
 id属性
   除了 class属性之外，每一个 HTML 元素还可以使用 id 属性。 
   唯一
   <h2 id="cat-photo-app">
   
   使用id选择器声明样式
     声明一个叫cat-photo-element的ID选择器 ，并设置背景色为绿色。
       #cat-photo-form {
         background-color: green;
       }
       <form id="cat-photo-form">
       ...
       </form>
     注意：在你的 style 元素内部，定义类选择器必须添加 . 为前缀，
     定义ID选择器必须添加 # 为前缀。
     
 三个HTML元素布局的重要属性：
   padding（内边距），margin（外边距），border（边框）
   元素的 padding 控制元素内容 content和元素边框 border 之间的距离。
     .red-box {
       background-color: red;
       padding: 20px;
     }
     <h5 class="box red-box">文本</h5>
   
   元素的外边距 margin 控制元素边框 border 和元素实际所占空间的距离。
     .green-box {
       background-color: green;
       padding: 20px;
       margin: 20px;
     }
   如果你将一个元素的 margin 设置为负值，元素将会变大
   
   自定义元素，每一个边具有不同的 padding。
   CSS 允许使用 padding-top、padding-right、padding-bottom 和 padding-left来控制元素上右下左四个方向的 padding。
     .green-box {
       background-color: green;
       padding-top:40px;
       padding-right:20px;
       padding-bottom:20px;
       padding-left:40px;
     }
 
   自定义元素，使每一个边具有不同的 margin。
   CSS 允许使用 margin-top、margin-right、margin-bottom 和 margin-left 来控制元素上右下左四个方向的 margin。
     .green-box {
       background-color: green;
       margin-top: 40px;
       margin-right: 20px;
       margin-bottom: 20px;
       margin-left: 40px;
     }
   
   集中起来指定元素的 padding-top、padding-right、padding-bottom 和 padding-left 属性
     padding：10px 20px 10px 20px;
     排序：上右下左。
   
   集中起来指定元素的 margin-top、margin-right、margin-bottom 和 margin-left 属性
     margin: 10px 20px 10px 20px;
     排序：上右下左。
 
 body元素
   body {background-color: black；}
   所有其他元素将自动继承body元素的样式
   
   关于样式冲突
   <style>
     body {color: green;}
     .pink-text{color:pink;}
     .blue-text{color:blue;}
   </style>
   <h1 class="pink-text blue-text">Hello World!</h1>
   在 HTML 中这些 class 如何排序是无所谓的,如上
   然而，在 <style> 部分中 class 声明的顺序却非常重要
   第二个声明总是比第一个具有优先权
   因为 .blue-text 是第二个声明，它覆盖了 .pink-text 属性和body元素的样式。
   
   另外，id属性具有更高的优先级
   #orange-text{
     color:orange;
   }
   <h1 class="pink-text blue-text" id="orange-text">Hello World!</h1>
   在上面那段代码里增改这段代码,颜色会变成橙色
   
   内联样式优先级比id更高,优先级最高是使用!important(注意不是！）
   .pink-text {
    color: pink !important;
   }
   优先级排列：!important>内联样式>id属性
      >后声明class样式>先声明class样式>自动继承的body样式
      
使用十六进制（hex code）表示颜色 //超过1600万种
  在 CSS 中，我们可以使用 6 位十六进制数字来表示颜色，
  每 2 位分别表示红色 (R)、绿色 (G) 和蓝色 (B) 成分
  0 是 hex code（十六进制编码）中最小的一个，它代表颜色的完全缺失。
  F 是 hex code（十六进制编码）中最大的一个，它代表最大可能的亮度。
  
  #000000 是黑色，#FFFFFF是白色，#FF0000是红色
  平均混合三种颜色得到不同灰度等级的灰色#808080；
  
  bbreviated（缩写的） hex code  //大约4000种
   红色#FF0000可缩写成#F00
   
使用RGB值表示颜色
  黑色rgb(0,0,0)
  白色rgb(255,255,255)
  
 
 
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
